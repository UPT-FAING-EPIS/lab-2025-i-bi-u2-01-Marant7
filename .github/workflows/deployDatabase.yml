name: Deploy Database Schemas
on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - 'liquibase/**'
      - '.github/workflows/deployDatabase.yml'

env:
  DB_SERVER: "${{ secrets.AZURE_SQL_SERVER }}.database.windows.net"
  DB_USER: "${{ secrets.SQL_USER }}"
  DB_PASSWORD: "${{ secrets.SQL_PASS }}"
  LIQUIBASE_CLASSPATH: /tmp/sqljdbc.jar

jobs:
  deploy-dimensional-models:
    name: Deploy Dimensional Models
    runs-on: ubuntu-latest
    strategy:
      matrix:
        model:
          - { folder: 'modelo01', db_name: 'shorten', changelog: 'changelog/modelo01/changelog-master.xml' }
          # Uncomment when other databases are ready
          # - { folder: 'modelo02', db_name: 'dw_reservas_viaje', changelog: 'changelog/modelo02/changelog-master.xml' }
          # - { folder: 'modelo03', db_name: 'dw_gestion_proyectos', changelog: 'changelog/modelo03/changelog-master.xml' }
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install dependencies
        run: |
          # Install SQL Server tools
          echo "Installing SQL Server tools..."
          curl https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
          curl https://packages.microsoft.com/config/ubuntu/20.04/prod.list | sudo tee /etc/apt/sources.list.d/msprod.list
          sudo apt-get update
          sudo apt-get install -y mssql-tools unixodbc-dev
          echo 'export PATH="$PATH:/opt/mssql-tools/bin"' >> ~/.bashrc
          source ~/.bashrc

          # Install Liquibase
          echo "Installing Liquibase..."
          wget https://github.com/liquibase/liquibase/releases/download/v4.27.0/liquibase-4.27.0.tar.gz -O /tmp/liquibase.tar.gz
          sudo mkdir -p /opt/liquibase
          sudo tar -xzf /tmp/liquibase.tar.gz -C /opt/liquibase
          sudo ln -s /opt/liquibase/liquibase /usr/local/bin/liquibase
          
          # Download JDBC driver
          echo "Downloading SQL Server JDBC driver..."
          wget https://repo1.maven.org/maven2/com/microsoft/sqlserver/mssql-jdbc/12.4.2.jre11/mssql-jdbc-12.4.2.jre11.jar -O ${{ env.LIQUIBASE_CLASSPATH }}

      - name: Verify database exists
        run: |
          echo "Checking if database ${{ matrix.model.db_name }} exists..."
          for i in {1..5}; do
            if sqlcmd -S "${{ env.DB_SERVER }}" -U "${{ env.DB_USER }}" -P "${{ env.DB_PASSWORD }}" -Q "SELECT name FROM master.dbo.sysdatabases WHERE name = '${{ matrix.model.db_name }}'" | grep -q "${{ matrix.model.db_name }}"; then
              echo "Database ${{ matrix.model.db_name }} exists!"
              exit 0
            fi
            echo "Attempt $i failed, retrying in 5 seconds..."
            sleep 5
          done
          echo "ERROR: Database ${{ matrix.model.db_name }} does not exist after 5 attempts!"
          echo "Available databases:"
          sqlcmd -S "${{ env.DB_SERVER }}" -U "${{ env.DB_USER }}" -P "${{ env.DB_PASSWORD }}" -Q "SELECT name FROM master.dbo.sysdatabases"
          exit 1

      - name: Apply database changes
        run: |
          echo "Running Liquibase migration for ${{ matrix.model.db_name }}..."
          liquibase \
            --url="jdbc:sqlserver://${{ env.DB_SERVER }}:1433;database=${{ matrix.model.db_name }};encrypt=true;trustServerCertificate=true" \
            --username="${{ env.DB_USER }}" \
            --password="${{ env.DB_PASSWORD }}" \
            --driver="com.microsoft.sqlserver.jdbc.SQLServerDriver" \
            --classpath="${{ env.LIQUIBASE_CLASSPATH }}" \
            --changeLogFile="liquibase/${{ matrix.model.changelog }}" \
            --logLevel=debug \
            update
